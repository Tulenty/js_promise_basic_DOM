{"mappings":"ACkCA,QAAQ,IAAI,CAAC,CAhCI,IAAI,QAAQ,SAAC,CAA9B,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,SAEhC,GACF,EAAK,gBAAgB,CAAC,QAAS,WAC7B,GACF,EAEJ,GAEiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,SACnB,EAAG,IACL,GAkBiC,EAAE,IAAI,CAhBhB,WACrB,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,SAAS,CAAC,GAAG,CAAC,WACtB,EAAQ,WAAW,CAAG,wBACtB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,GAUwD,KAAK,CARxC,SAAC,CAAtB,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,UAAW,iBACtC,EAAa,WAAW,CAAI,yBAAsC,MAAA,CAAd,EAAM,OAAO,EACjE,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promise1 = new Promise(function(resolve) {\n    var logo = document.querySelector(\".logo\");\n    if (logo) logo.addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"error\"));\n    }, 3000);\n});\nvar successHandler = function() {\n    var message = document.createElement(\"div\");\n    message.classList.add(\"message\");\n    message.textContent = \"Promise was resolved!\";\n    document.body.appendChild(message);\n};\nvar errorHandler = function(error) {\n    var errormessage = document.createElement(\"div\");\n    errormessage.classList.add(\"message\", \"error-message\");\n    errormessage.textContent = \"Promise was rejected! \".concat(error.message);\n    document.body.appendChild(errormessage);\n};\nPromise.race([\n    promise1,\n    promise2\n]).then(successHandler).catch(errorHandler);\n\n//# sourceMappingURL=index.e220745e.js.map\n","'use strict';\n\nconst promise1 = new Promise((resolve) => {\n  const logo = document.querySelector('.logo');\n\n  if (logo) {\n    logo.addEventListener('click', () => {\n      resolve();\n    });\n  }\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('error'));\n  }, 3000);\n});\n\nconst successHandler = () => {\n  const message = document.createElement('div');\n\n  message.classList.add('message');\n  message.textContent = 'Promise was resolved!';\n  document.body.appendChild(message);\n};\n\nconst errorHandler = (error) => {\n  const errormessage = document.createElement('div');\n\n  errormessage.classList.add('message', 'error-message');\n  errormessage.textContent = `Promise was rejected! ${error.message}`;\n  document.body.appendChild(errormessage);\n};\n\nPromise.race([promise1, promise2]).then(successHandler).catch(errorHandler);\n"],"names":["Promise","race","resolve","logo","document","querySelector","addEventListener","reject","setTimeout","Error","then","message","createElement","classList","add","textContent","body","appendChild","catch","error","errormessage","concat"],"version":3,"file":"index.e220745e.js.map"}
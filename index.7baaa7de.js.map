{"mappings":"ACEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,SAEhC,EACF,EAAK,gBAAgB,CAAC,QAAS,WAC7B,GACF,GAEA,EAAO,AAAI,MAAM,8BAErB,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,SACnB,EAAG,IACL,GAEM,EAAgB,SAAC,CAAvB,EAA6B,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAY,UACjC,EAAU,SAAS,aAAa,CAAC,OAKvC,OAHA,EAAQ,SAAS,CAAC,GAAG,CAAC,GACtB,EAAQ,WAAW,CAAG,EAEf,CACT,EAEM,EAAqB,SAAC,CAA5B,EACE,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAiBA,QAAQ,IAAI,CAAC,CAAC,EAAU,EAAS,EAAE,IAAI,CAfhB,WAGrB,EAFuB,EAAc,yBAGvC,GAWwD,KAAK,CATxC,SAAC,CAAtB,EAME,EALqB,EAClB,yBAAsC,MAAA,CAAd,EAAM,OAAO,EACtC,iBAIJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promise1 = new Promise(function(resolve, reject) {\n    var logo = document.querySelector(\".logo\");\n    if (logo) logo.addEventListener(\"click\", function() {\n        resolve();\n    });\n    else reject(new Error(\"Logo not found on the page\"));\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"error\"));\n    }, 3000);\n});\nvar createMessage = function(text) {\n    var className = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"message\";\n    var message = document.createElement(\"div\");\n    message.classList.add(className);\n    message.textContent = text;\n    return message;\n};\nvar insertMessageToDOM = function(message) {\n    document.body.appendChild(message);\n};\nvar successHandler = function() {\n    var successMessage = createMessage(\"Promise was resolved!\");\n    insertMessageToDOM(successMessage);\n};\nvar errorHandler = function(error) {\n    var errormessage = createMessage(\"Promise was rejected! \".concat(error.message), \"error-message\");\n    insertMessageToDOM(errormessage);\n};\nPromise.race([\n    promise1,\n    promise2\n]).then(successHandler).catch(errorHandler);\n\n//# sourceMappingURL=index.7baaa7de.js.map\n","'use strict';\n\nconst promise1 = new Promise((resolve, reject) => {\n  const logo = document.querySelector('.logo');\n\n  if (logo) {\n    logo.addEventListener('click', () => {\n      resolve();\n    });\n  } else {\n    reject(new Error('Logo not found on the page'));\n  }\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('error'));\n  }, 3000);\n});\n\nconst createMessage = (text, className = 'message') => {\n  const message = document.createElement('div');\n\n  message.classList.add(className);\n  message.textContent = text;\n\n  return message;\n};\n\nconst insertMessageToDOM = (message) => {\n  document.body.appendChild(message);\n};\n\nconst successHandler = () => {\n  const successMessage = createMessage('Promise was resolved!');\n\n  insertMessageToDOM(successMessage);\n};\n\nconst errorHandler = (error) => {\n  const errormessage = createMessage(\n    `Promise was rejected! ${error.message}`,\n    'error-message',\n  );\n\n  insertMessageToDOM(errormessage);\n};\n\nPromise.race([promise1, promise2]).then(successHandler).catch(errorHandler);\n"],"names":["promise1","Promise","resolve","reject","logo","document","querySelector","addEventListener","Error","promise2","setTimeout","createMessage","text","className","arguments","length","message","createElement","classList","add","textContent","insertMessageToDOM","body","appendChild","race","then","catch","error","concat"],"version":3,"file":"index.7baaa7de.js.map"}